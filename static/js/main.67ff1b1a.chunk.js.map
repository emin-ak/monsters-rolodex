{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","m","SearchBox","placeHolder","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","r","json","u","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAK,wBAA0BH,EAAMI,QAAQC,GAAK,2BACrE,mCAAML,EAAMI,QAAQE,QACpB,4BAAIN,EAAMI,QAAQG,YCHbC,EAAW,SAAAR,GACpB,OACI,qBAAKC,UAAU,YAAf,SACED,EAAMS,SAASC,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAAiBP,QAASO,GAAfA,EAAEN,UCNZO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,sBAAKb,UAAU,mBAAf,UACA,uBACMc,KAAK,SAASd,UAAU,SACxBe,YAAY,GACVC,SAAUH,IAEN,gCAAQD,IACZ,sBAAMZ,UAAU,eAAhB,SACC,6BCNQiB,E,kDACnB,aAAe,IAAD,8BACZ,gBAWFJ,aAAe,SAACK,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GAAD,OAAO,EAAKT,SAAS,CAAEX,SAAUoB,S,oBAK3C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bf,EADD,EACCA,SAAUY,EADX,EACWA,YACZU,EAAmBtB,EAASuB,QAAO,SAACrB,GAAD,OACvCA,EAAEL,KAAK2B,cAAcC,SAASb,EAAYY,kBAE5C,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUL,SAAUsB,W,GA5BKI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67ff1b1a.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={'https://robohash.org/' + props.monster.id + '?set=set2&size=180x180'}/>\r\n        <h2> {props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>        \r\n    </div>\r\n);","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = props => {\r\n    return (\r\n        <div className='card-list'>            \r\n         {props.monsters.map((m) => (\r\n            <Card key={m.id} monster={m}/> \r\n          ))}       \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\nexport const SearchBox = ({placeHolder, handleChange}) => (\r\n    <div className='search-container'>\r\n    <input\r\n          type=\"search\" className='search'\r\n          placeholder=\"\"\r\n            onChange={handleChange}\r\n    />\r\n                <label>{placeHolder}</label>\r\n            <span className=\"focus-border\">\r\n            \t<i></i>\r\n            </span>\r\n        </div>\r\n)","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((r) => r.json())\n      .then((u) => this.setState({ monsters: u }));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((m) =>\n      m.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeHolder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}